[{"D:\\Code\\react\\School\\front-end\\src\\index.js":"1","D:\\Code\\react\\School\\front-end\\src\\reportWebVitals.js":"2","D:\\Code\\react\\School\\front-end\\src\\App.js":"3","D:\\Code\\react\\School\\front-end\\src\\Containers\\Router\\Router.js":"4","D:\\Code\\react\\School\\front-end\\src\\Containers\\Nav\\Nav.js":"5","D:\\Code\\react\\School\\front-end\\src\\Containers\\Test\\Test.js":"6","D:\\Code\\react\\School\\front-end\\src\\Containers\\FrontPage\\FrontPage.js":"7","D:\\Code\\react\\School\\front-end\\src\\Containers\\FrontPage\\FrontImage\\FrontImage.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":341,"mtime":1611078587024,"results":"12","hashOfConfig":"10"},{"size":832,"mtime":1611081777427,"results":"13","hashOfConfig":"10"},{"size":723,"mtime":1611080792372,"results":"14","hashOfConfig":"10"},{"size":642,"mtime":1611078181486,"results":"15","hashOfConfig":"10"},{"size":423,"mtime":1611083346909,"results":"16","hashOfConfig":"10"},{"size":458,"mtime":1611083011562,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1j1xjmx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\react\\School\\front-end\\src\\index.js",[],["37","38"],"D:\\Code\\react\\School\\front-end\\src\\reportWebVitals.js",[],"D:\\Code\\react\\School\\front-end\\src\\App.js",["39","40"],"import styles from './App.module.css';\nimport axios from 'axios'\nimport { ToastContainer } from 'react-toastify';\n\nimport Router from './Containers/Router/Router'\nimport Header from './Containers/Nav/Nav'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Router />\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default App;\n","D:\\Code\\react\\School\\front-end\\src\\Containers\\Router\\Router.js",["41"],"D:\\Code\\react\\School\\front-end\\src\\Containers\\Nav\\Nav.js",["42","43","44"],"D:\\Code\\react\\School\\front-end\\src\\Containers\\Test\\Test.js",["45","46"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst Test = () => {\r\n    const [message, setMessage] = useState(undefined)\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const resp = await axios.get('/api/test');\r\n            console.log(resp)\r\n            setMessage(resp.data)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>{message ? message : \"message has not yet arrived\"}</p>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test","D:\\Code\\react\\School\\front-end\\src\\Containers\\FrontPage\\FrontPage.js",[],"D:\\Code\\react\\School\\front-end\\src\\Containers\\FrontPage\\FrontImage\\FrontImage.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":9,"column":5,"nodeType":"54","messageId":"55","endLine":9,"endColumn":9},{"ruleId":"58","severity":1,"message":"59","line":13,"column":21,"nodeType":"60","endLine":13,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":14,"column":21,"nodeType":"60","endLine":14,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":15,"column":21,"nodeType":"60","endLine":15,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":7,"column":5,"nodeType":"54","endLine":7,"endColumn":14,"suggestions":"63"},{"ruleId":"61","severity":1,"message":"64","line":7,"column":15,"nodeType":"65","endLine":15,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":10,"column":17,"nodeType":"60","endLine":10,"endColumn":42},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMessage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["70"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Add dependencies array: []",{"range":"73","text":"74"},[400,400],", []"]